#!/bin/bash

############################################ BASICS
SCRIPT_DIR="$COMPOSER_RUNTIME_BIN_DIR"
WORKING_DIR=$(pwd)
source $SCRIPT_DIR/sake-self-methods

############################################ DIR
if [ "$1" != "" ]; then
    dir=$1
else
    dir='./'
fi

############################################ SETTINGS EXTRA
while getopts a: flag; do
    case "${flag}" in
    a) dir=${OPTARG} ;;
    esac
done

############################################ SETTINGS
help='no'
while (($#)); do
    case $1 in
    -h | --help)
        help='yes'
        shift
        ;;
    -*)
        printf 'Unknown option: %q\n\n' "$1"
        help='yes'
        ;;
    *) dir=$1 ;;
    esac
    shift
done

help_and_exit() {

    ECHOHEAD "Security Scan"

    ECHOHEAD "Current settings:"
    echonice "files to analyse:             $WORKING_DIR"

    ECHOHEAD "Available settings:"
    echonice "-h, --help                    show help information"

    ECHOHEAD "Example usage:"
    echonice "sake-lint-security ."
    echonice "sake-lint-security app/client/javascript"
    echonice "sake-lint-security foo/bar"

    echofunctions
    exit
}

############################################ HELP ONLY
if [[ "$help" == "yes" ]]; then
    help_and_exit
fi

############################################ CODE

if [ -d "$WORKING_DIR" ]; then
    cd $WORKING_DIR
else
    echobad "Could not change directory to $WORKING_DIR"
    help_and_exit
fi

set -Eeuo pipefail



status=0

run() {
  echo -e "\n> $* (cwd: $(pwd))"
  if ! "$@"; then
    status=1
    return 1
  fi
}

# 1) Composer audit
run composer audit || true

# 2) Dry-run update for roave/security-advisories
composer require --dev roave/security-advisories:dev-latest
run composer update --dry-run roave/security-advisories || true

# 3) For every package.json (excluding vendor and node_modules)
while IFS= read -r -d '' pkg; do
  npmdir="$(dirname "$pkg")"
  echo -e "\n==> NPM audit in: $npmdir"
  pushd "$npmdir" >/dev/null

  # audit (allow failure but record it), then try to fix
  npm audit --audit-level=high || status=1
  npm audit --fix || status=1

  popd >/dev/null
done < <(find . -type f -name 'package.json' \
          -not -path './vendor/*' \
          -not -path '*/node_modules/*' -print0)

echo
if [[ $status -ne 0 ]]; then
  echo 'Security checks found issues.'
else
  echo 'All security checks passed.'
fi

exit "$status"
