#!/bin/bash
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
WORKING_DIR=$(pwd)

help_and_exit() {
    echo "---------------------------------";
    echo "  Available settings:";
    echo "---------------------------------";
    echo "  -c, --commit-and-push          commit and push also? enter yes to execute";
    echo "  -m, --message                  commit message";
    echo "  -n, --new-tag                  create new tag?";
    echo "  -a, --also                     also do vendor - e.g. vendor/silverstripe OR vendor/sunnysideup";
    echo "  -t, --themes-also              include folders in themes";
    echo ""
    echo "---------------------------------";
    echo "  Example usage:"
    echo "---------------------------------";
    echo "  e.g. sslint-gitpush   -m 'PATCH'   -c yes  -a 'vendor/silverstripe'   -t yes  app/src ";
    echo "---------------------------------";
    echo ""
    echo ""

    exit;
}

message="PATCH: automated linter"
dir='app/src'
also='vendor/nothing'
newTag='no'
while (( $# )); do
  case $1 in
    -c|--commit-and-push)  commitAndPush=$2;shift ;;
    -m|--message)          message=$2;shift ;;
    -n|--new-tag)          newTag=$2;shift ;;
    -a|--also)             also=$2;shift ;;
    -t|--themes-also)      alsoDoThemes=$2;shift ;;
    -*)                    printf 'Unknown option: %q\n\n' "$1";
                           help_and_exit 1 ;;
    *)                     dir=$1;;
  esac
  shift
done

echo ""
echo ""
echo "---------------------------------";
echo "  Running GIT PUSH";
echo "---------------------------------";
echo "  directory of script:           $SCRIPT_DIR";
echo "  directory to commit:           $WORKING_DIR/$dir";
echo "---------------------------------";
echo "  Commit and Push?:              $commitAndPush";
echo "  Message:                       $message";
echo "  Create New Tag?:               $newTag";
echo "  Also check:                    $WORKING_DIR/$also";
echo "  Also include themes?:          $alsoDoThemes";
echo "---------------------------------";
echo ""
echo ""

echo "# going to right directory: $WORKING_DIR/$dir"
cd $WORKING_DIR/$dir

if test -f "$WORKING_DIR/$dir/.git/config"; then
    echo "# check git status"
    git status

    if [[ "$commitAndPush" == "yes" ]]; then
        echo "# adding files to git repo"
        git add . -A
        #git add $WORKING_DIR/$also
        #git add $WORKING_DIR/$logFile

        echo "# committing files to git repo"
        git commit . -m "$message"
        #git commit $WORKING_DIR/$also -m "$message"
        #git commit $WORKING_DIR/$logFile -m "$message"
    fi

    echo "# pulling commits from git repo"
    git pull

    if [[ "$commitAndPush" == "yes" ]]; then
        echo "# pushing commits to git repo"
        git push
    fi


    if [[ "$newTag" == "yes" ]]; then
        echo "# git fetch all"
        git fetch --all

        echo "# get list of tags"
        git tag

        RES=$(git show-ref --tags)
        if [ -z "$RES" ]; then
            NEW_TAG=1.0.0
        else
            NEW_TAG=$(git describe --tags --abbrev=0 | awk -F. '{OFS="."; $NF+=1; print $0}')
        fi


        echo "# we are creating $NEW_TAG";
        git tag -a $NEW_TAG -m "auto-generated linter tag"

        echo "# pushing to origins";
        git push --tags

        echo "# check";
        git tag -n

    fi

    echo "# check git status"
    git status

    if test -f "$WORKING_DIR/$also"; then
        $SCRIPT_DIR/sslint-gitpush-vendor-packages -m "'$message'" -a 'nothing-here-hopefully' -c $commitAndPush -n $newTag $WORKING_DIR/$also
    fi

    if [[ "$alsoDoThemes" == "yes" ]]; then
        $SCRIPT_DIR/sslint-gitpush-vendor-packages -m "'$message'"  -a 'nothing-here-hopefully' -t no -c $commitAndPush -n $newTag $WORKING_DIR/themes
    fi
else
    echo ""
    echo ""
    echo "---------------------------------";
    echo "  ===  ERROR - NOT A GIT REPO ===";
    echo "  "$WORKING_DIR/$dir;
    echo "  === IS NOT A GIT REPO       ===";
    echo "---------------------------------";
fi

echo "################################################"
echo "################################################"
echo "################################################"
