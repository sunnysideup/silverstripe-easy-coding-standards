#!/bin/bash


SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
WORKING_DIR=$(pwd)
source $SCRIPT_DIR/ssu-methods

if [ "$1" != "" ]; then
    dir=$1;
else
    dir='vendor'
fi

help_and_exit() {
    echoline;
    echonice "   Available settings:";
    echoline;
    echonice "   -m, --message                  message - e.g. Lint";
    echonice "   -c, --commit-and-push          commit and push also? enter yes to execute";
    echonice "   -v, --new-version              create new tag? options are no|patch|minor|major";
    echonice " "
    echoline;
    echonice "   Example usage:"
    echoline;
    echonice "   ssu-gitpush-vendor-packages  -m 'PATCH: lint'   -c yes  -v patch   vendor/my-vendor-name";
    echoline;
    echonice " "
    echonice " "
    exit;
}

commitAndPush='yes'
message='WIP'
newVersion='no'
statusOnly='no'
while (( $# )); do
  case $1 in
    -m|--message)          message=$2;shift ;;
    -c|--commit-and-push)  commitAndPush=$2;shift ;;
    -v|--new-version)      newVersion=$2;shift ;;
    -s|--status-only)      statusOnly=$2;shift ;;
    -*)                    printf 'Unknown option: %q\n\n' "$1";
                           help_and_exit 1 ;;
    *)                     dir=$1;;
  esac
  shift
done

echonice " "
echonice " "
echoline;
echonice "   Checking Vendor Packages for Changes";
echoline;
echonice "   Directory of script:           $SCRIPT_DIR";
echonice "   Directory to analyse:          $WORKING_DIR/$dir";
echoline;
echonice "   Message:                       $message";
echonice "   Commit and Push?:              $commitAndPush";
echonice "   Create New tag?:               $newVersion";
echonice "   Status Only?:                  $statusOnly";
echoline;
echonice " "
echonice " "


echoline
echonice "   going to look for folders in $WORKING_DIR/$dir"
echoline



find $WORKING_DIR/$dir -mindepth 1 -maxdepth 1 -type d -print0 |
    while IFS= read -r -d '' line; do
        echoline
        echonice "   DOING: $line"  ;
        echoline
        cd "$line";
        if [[ "$statusOnly" == "yes" ]]; then
            echoline;
            echonice "   # check git status"
            echoline;
            git status
        else
            $SCRIPT_DIR/ssu-gitpush . -m "$message" -c $commitAndPush -s $statusOnly  -v $newVersion ;
        fi
    done


echoend;
