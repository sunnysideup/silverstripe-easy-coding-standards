#!/bin/bash

############################################ BASICS
SCRIPT_DIR="$COMPOSER_RUNTIME_BIN_DIR"
WORKING_DIR=$(pwd)
source $SCRIPT_DIR/sake-self-methods
# : ${ecsConfig:=$SCRIPT_DIR/../sunnysideup/easy-coding-standards/ecs.yml}

############################################ DIR
dir='app/src'

############################################ SETTINGS
package=''
namespace='no'
help='no'
while (( $# )); do
  case $1 in
    -p|--package)      package=$2;shift ;;
    -n|--namespace)    also=$2;shift ;;
    -h|--help)         help='yes';shift ;;
    -*)                printf 'Unknown option: %q\n\n' "$1";
                       help='yes' ;;
    *)                 dir=$1;;
  esac
  shift
done

help_and_exit() {
    echohead "Remove Origs";
    echonice "Directory of script:           $SCRIPT_DIR";
    echonice "Directory to analyse:          $WORKING_DIR/$dir";

    echoline "Current settings:";
    echonice "package (-p):                  $WORKING_DIR/$also";
    echonice "namespace (-n):                $dryRun";

    echohead "Available settings:";
    echonice "-p, --package                  e.g. myvendor/mypackage";
    echonice "-n, --namespace                use forward rather than backward slashes"
    echonice "-h, --help                     show help information"

    echohead "Example usage:"
    echonice "sake-ss-start-new-module app -p sunnysideup/repo -n Sunnysideup/App";

    echofunctions
    exit;
}

############################################ HELP ONLY
if [[ "$help" == "yes" ]]; then
    help_and_exit
fi

############################################ CODE

if [ -d "$WORKING_DIR" ]; then
    cd $WORKING_DIR
else
    echonice "Could not change directory to $WORKING_DIR";
    help_and_exit;
fi
if [ -d "$from" ]; then
    // do nothing
else
    echonice "Could not find $from as a directory.";
    help_and_exit;
fi

rsync -av --exclude='.git' $from ./;

echoend;


