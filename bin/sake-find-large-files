#!/bin/bash

############################################ BASICS
SCRIPT_DIR="$COMPOSER_RUNTIME_BIN_DIR"
WORKING_DIR=$(pwd)
source $SCRIPT_DIR/sake-self-methods

# : ${ecsConfig:=$SCRIPT_DIR/../sunnysideup/easy-coding-standards/ecs.yml}

############################################ DIR
dir='./'

############################################ SETTINGS
help='no'
minSize="100M"

while (($#)); do
    case $1 in
    -h | --help)
        help='yes'
        shift
        ;;
    -m | --min-size)
        minSize=$2
        shift
        ;;
    -*)
        printf 'Unknown option: %q\n\n' "$1"
        help='yes'
        ;;
    *) dir=$1 ;;
    esac
    shift
done

help_and_exit() {

    ECHOHEAD "Find Large Files"
    echonice "Directory of script:           $SCRIPT_DIR"
    echonice "Directory to analyse:          $WORKING_DIR/$dir"
    echonice "Min Size:                      $minSize"

    ECHOHEAD "Available settings:"
    echonice "-h, --help                     show help information"
    echonice "-m, --min-size                 minimum size to be picked up"

    ECHOHEAD "Example usage:"
    echonice "sake-find-large-files -m 200M ./"

    echofunctions
    exit
}
#!/bin/bash

# Function to convert human-readable sizes to bytes for comparison
sizeToBytes() {
    echo "$1" | awk '
    /G/ { printf "%.0f\n", $1 * 1024 * 1024 * 1024 }
    /M/ { printf "%.0f\n", $1 * 1024 * 1024 }
    /K/ { printf "%.0f\n", $1 * 1024 }
    /^[0-9]+$/ { print $1 }
    '
}

# Function to find directories larger than a specified size and format output
findLargeDirs() {
    local sizeThresholdBytes=$(sizeToBytes "$1")
    echo -e "Size\t\tDirectory"
    find . -type d -exec du -sb {} + | awk -v size="$sizeThresholdBytes" '$1 > size' |
        sort -rh | while read -r bytes dir; do
        humanSize=$(numfmt --to=iec --format="%.1f" "$bytes")
        relativeDir=${dir#./} # Remove './' prefix
        printf "%-10s\t%s\n" "$humanSize" "$relativeDir"
    done
}

# Check if help is requested
if [[ "$help" == "yes" ]]; then
    help_and_exit
fi

# Verify directory existence
if [ -d "$dir" ]; then
    cd "$dir" || {
        echonice "Failed to enter directory"
        exit 1
    }
else
    echonice "Could not change directory to $dir"
    help_and_exit
fi

echonice "Finding files larger than $minSize in $dir"

# Finding large files and formatting output
echo -e "Size\t\tFile"
find . -xdev -type f -size +"$minSize" -exec du -sb {} + |
    sort -rh | head -n50 | while read -r bytes file; do
    humanSize=$(numfmt --to=iec --format="%.1f" "$bytes")
    relativeFile=${file#./} # Remove './' prefix
    printf "%-10s\t%s\n" "$humanSize" "$relativeFile"
done

# Finding large directories
findLargeDirs "$minSize"

echoend
