#!/bin/bash

############################################ BASICS
SCRIPT_DIR="$COMPOSER_RUNTIME_BIN_DIR"
WORKING_DIR=$(pwd)
source $SCRIPT_DIR/sake-self-methods

# : ${ecsConfig:=$SCRIPT_DIR/../sunnysideup/easy-coding-standards/ecs.yml}

############################################ DIR
dir='./'

############################################ SETTINGS
help='no'
minSize="100M"

while (($#)); do
    case $1 in
    -h | --help)
        help='yes'
        shift
        ;;
    -m | --min-size)
        minSize=$2
        shift
        ;;
    -*)
        printf 'Unknown option: %q\n\n' "$1"
        help='yes'
        ;;
    *) dir=$1 ;;
    esac
    shift
done

help_and_exit() {

    echohead "Find Large Files"
    echonice "Directory of script:           $SCRIPT_DIR"
    echonice "Directory to analyse:          $WORKING_DIR/$dir"
    echonice "Min Size:                      $minSize"

    echohead "Available settings:"
    echonice "-h, --help                     show help information"
    echonice "-m, --min-size                 minimum size to be picked up"

    echohead "Example usage:"
    echonice "sake-find-large-files -m 200M ./"

    echofunctions
    exit
}

# Function to find directories larger than a specified size
findLargeDirs() {
    local sizeThreshold=$1
    find . -type d -exec du -sh {} + | awk -v size="${sizeThreshold}" '$1 > size'
}

# Usage: ./script.sh 100M
# This will find directories larger than 100MB

############################################ HELP ONLY
if [[ "$help" == "yes" ]]; then
    help_and_exit
fi

############################################ CODE

if [ -d "$WORKING_DIR/$dir" ]; then
    cd $WORKING_DIR/$dir
else
    echonice "Could not change directory to $WORKING_DIR/$dir"
    help_and_exit
fi

find $WORKING_DIR/$dir -xdev -type f -size +$minSize -exec du -sh {} ';' | sort -rh | head -n50
findLargeDirs $minSize

echoend
